services:

  # --- postgres ---
  
  postgresql:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: administration
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 12345
    networks:
      - backend
      
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5433:5433"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgresql
    networks:
      - backend
      
  # --- liquibase ---
  
  liquibase:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgresql
    command:
      - --changelog-file=changelog-master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/administration
      - --username=admin
      - --password=12345
      - update
    volumes:
      - ./liquibase:/liquibase/changelog
    networks:
      - backend


  # --- kafka ---

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend

  broker:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://broker:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - backend


  # --- redis ---

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend


  # --- mongo ---

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 12345
    networks:
      - backend

  mongo-express:
    image: mongo-express:latest
    ports:
      - "12080:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: 12345
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: 12345
      ME_CONFIG_MONGODB_URL: mongodb://admin:12345@mongo:27017/
    depends_on:
      - mongo
    networks:
      - backend


  # --- service filtering ---

  service-filtering:
    image: michaelthecircle/servicefiltering:latest
    ports:
      - "8081:8080"
    environment:
      # --- database ---
      DB_URL: jdbc:postgresql://postgresql:5432/administration
      DB_USER: admin
      DB_PASSWORD: 12345
      # --- kafka consumer ---
      KAFKA_CONSUMER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_CONSUMER_CLIENT_ID: filtering_consumer
      KAFKA_CONSUMER_GROUP_ID: filtering_group
      KAFKA_CONSUMER_AUTO_OFFSET_RESET: latest
      KAFKA_CONSUMER_TOPIC: entry_topic
      # --- kafka producer ---
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_PRODUCER_CLIENT_ID: filtering_producer
      KAFKA_PRODUCER_ACKS: 1
      KAFKA_PRODUCER_TOPIC: filtering_to_deduplication_topic
    depends_on:
      - postgresql
      - liquibase
      - broker
    networks:
      - backend


  # --- service deduplication ---

  service-deduplication:
    image: michaelthecircle/servicededuplication:latest
    ports:
      - "8082:8080"
    environment:
      # --- database ---
      DB_URL: jdbc:postgresql://postgresql:5432/administration
      DB_USER: admin
      DB_PASSWORD: 12345
      # --- kafka consumer ---
      KAFKA_CONSUMER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_CONSUMER_CLIENT_ID: deduplication_consumer
      KAFKA_CONSUMER_GROUP_ID: deduplication_group
      KAFKA_CONSUMER_AUTO_OFFSET_RESET: latest
      KAFKA_CONSUMER_TOPIC: filtering_to_deduplication_topic
      # --- kafka producer ---
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_PRODUCER_CLIENT_ID: deduplication_producer
      KAFKA_PRODUCER_ACKS: 1
      KAFKA_PRODUCER_TOPIC: deduplication_to_enrichment_topic
      # --- redis ---
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgresql
      - liquibase
      - broker
      - redis
    networks:
      - backend


  # --- service enrichment ---

  service-enrichment:
    image: michaelthecircle/serviceenrichment:latest
    ports:
      - "8083:8080"
    environment:
      # --- database ---
      DB_URL: jdbc:postgresql://postgresql:5432/administration
      DB_USER: admin
      DB_PASSWORD: 12345
      # --- kafka consumer ---
      KAFKA_CONSUMER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_CONSUMER_CLIENT_ID: enrichment_consumer
      KAFKA_CONSUMER_GROUP_ID: enrichment_group
      KAFKA_CONSUMER_AUTO_OFFSET_RESET: latest
      KAFKA_CONSUMER_TOPIC: deduplication_to_enrichment_topic
      # --- kafka producer ---
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_PRODUCER_CLIENT_ID: enrichment_producer
      KAFKA_PRODUCER_ACKS: 1
      KAFKA_PRODUCER_TOPIC: exit_topic
      # --- mongo ---
      MONGO_CONNECTION_STRING: mongodb://admin:12345@mongo:27017/
      MONGO_DATABASE: administration
      MONGO_COLLECTION: enrichment
    depends_on:
      - postgresql
      - liquibase
      - broker
      - mongo
    networks:
      - backend


  # --- service management ---
  # запускается последним
  # при переходе на localhost:8084/actuator выводятся доступные ссылки
  # health, info, metrics, metrics-requiredMetricName
  
  service-management:
    image: michaelthecircle/servicemanagement:latest
    ports:
      - "8084:8080"
    environment:
      # --- database ---
      DB_URL: jdbc:postgresql://postgresql:5432/administration
      DB_USER: admin
      DB_PASSWORD: 12345
    depends_on:
      - postgresql
      - liquibase
    networks:
      - backend

networks:
  backend: { }
